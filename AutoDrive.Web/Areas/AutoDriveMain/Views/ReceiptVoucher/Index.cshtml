@using AutoDriveResources
@model AutoDrive.VM.AutoDriveMainViewModels.ReceiptVoucherVM
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .modal-body {
        height: auto !important;
    }

    .col-md-4 {
        width: 28.33333333%;
    }

    .col-md-8 {
        width: 71.66666666%;
    }
</style>
<div class="text-center">
    <h3 class="center info"> @Messages.ReceiptVoucher</h3>
</div>

@*Creat apopup Modal For Add And Edit*@



@using (Html.BeginForm("CreateReceiptVoucher", "ReceiptVoucher", FormMethod.Post, new { Id = "myForm", enctype = "multipart/form-data" }))
{
<div class="form-horizontal">


    @if (Model != null)
    {
        @*<input value="@Model.ID" id="ID" name="ID" style="display:none" />*@


        <input value="@Model.ReceiptVoucher_Msg" id="CourseReservation_Msg" name="CourseReservation_Msg" style="display:none" />
        <input value="@Model.TraineeId" id="TraineeId" name="TraineeId" style="display:none" />
        <input value="@Model.CourseReservationId" id="CourseReservationId" name="CourseReservationId" style="display:none" />

    }
    <input value="@Model.TraineeEvaluationId" id="TraineeEvaluationId" name="TraineeEvaluationId" style="display:none" />

    <div class="row ">
        <div>
            <div class="col-md-12">
                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.CodeSearch, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.DropDownList("ViewBag.CodeId", (SelectList)ViewBag.CodeId, "--  --", new { @class = "form-control", @id = "CodeId", @name = "CodeId" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessage("مطلوب", "", new { @class = "text-danger" })

                        </div>

                    </div>

                </div>

                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.Code, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Code, new { @class = "form-control",@Name="Code" , @id="Code", @readonly = "readonly" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>


            </div>

            <div class="col-md-12">





                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.Name, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.ArName, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.ArName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.EnName, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(x => x.EnName, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.EnName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.FileNo, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.FileNo, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.FileNo, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>




                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.StudyPeriodSetting, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @if (@ViewBag.LangEn == true)
                            {
                                @Html.TextBoxFor(m => m.StudyPeriodSettingEnName, new { @class = "form-control", @readonly = "readonly" })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.StudyPeriodSettingName, new { @class = "form-control", @readonly = "readonly" })

                            }
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                </div>

                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.VisualStudyCount, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">

                            @Html.TextBoxFor(m => m.VisualStudyCount, new { @class = "form-control", @readonly = "readonly" })

                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                </div>



                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.PracticalCount, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.PracticalCount, new { @class = "form-control", @placeholder = "مستوى الدراسه", @readonly = "readonly" })

                        </div>
                        <div class="col-md-2">
                        </div>

                    </div>
                </div>


                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.LevelTotal, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.LevelTotal, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-2">
                        </div>

                    </div>
                </div>

                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.EmployeeSafeId, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.DropDownList("EmployeeSafeId", (SelectList)ViewBag.EmployeeSafeId, Messages.ChooseEmployeeSafe, new { @class = "form-control", @id = "EmployeeSafeId", @name = "EmployeeSafeId" })
                        </div>
                        <div class="col-md-2">
                            @*@Html.ValidationMessageFor(a=>a.EmployeeSafeId, "", new { @class = "text-danger" })*@

                        </div>

                    </div>

                </div>

            </div>
            <div class="col-md-12" style="margin-bottom:17px;">

                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.PaidValue, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.PaidValue, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.PaidValue, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>

                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.PaidDate, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.PaidDate, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.PaidDate, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>

                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.ReceiptVoucherCode, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.ReceiptVoucherCode, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.ReceiptVoucherCode, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>

                <div class="col-md-6" style="margin-bottom:17px;">
                    @Html.Label(Resources.ReceiptVoucherDate, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.ReceiptVoucherDate, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.ValidationMessageFor(model => model.ReceiptVoucherDate, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>


            </div>
        </div>
    </div>

</div>

    <div class="modal-footer">
        <div class="text-left">
            @if (Model != null)
            {

                @*<input type="submit" value="اضافه" id="btnCreate" />*@

                <button type="submit" class="btn btn-primary btn-lg btn-round " id="btnSave" data-placement="top" data-content="@Messages.AddNew" style="left:54%;bottom:15%"><span class="glyphicon glyphicon-plus"></span> </button>

            }

        </div>
    </div>
}


<div class="container" style="margin-top:3%">
    @*<button class="btn btn-primary btn-lg btn-round navbar-fixed-bottom" id="ADDNEWREC" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="@Messages.AddNew" style="left:74%;bottom:15%"><span class="glyphicon glyphicon-plus"></span> </button>*@

    <table class="table table-striped jambo_table bulk-action">
        <thead>
            <tr>
                <th>
                    م
                </th>
                <th>
                    @Html.DisplayNameFor(x => x.TraineeId)

                </th>
                <th>
                    @Html.DisplayNameFor(x => x.Code)

                </th>
                <th>
                    @Html.DisplayNameFor(x => x.PaidValue)
                </th>
                <th>
                    @Html.DisplayNameFor(x => x.PaidDate)
                </th>
                <th>
                    @Html.DisplayNameFor(x => x.ReceiptVoucherCode)

                </th>
                <th>
                    @Html.DisplayNameFor(x => x.ReceiptVoucherDate)

                </th>
                <th>
                    @Html.DisplayNameFor(x => x.EmployeeSafeId)

                </th>
                <th style="width:80px"></th>
            </tr>
        </thead>

        <tbody></tbody>
    </table>
</div>



@*Creat apopup Modal For Add And Edit*@
<div class="modal fade" id="MyModalDataTable">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="Modaltitle"></h4>
            </div>
            <div class="modal-body" style="height:138px">
                <form id="formDataTable">
                    <div class="form-horizontal">



                        @Html.HiddenFor(a => a.ID, new { @id = "_ID" })
                        @Html.HiddenFor(a => a.TraineeId, new { @id = "_TraineeId" })
                        @Html.HiddenFor(a => a.CourseReservationId, new { @id = "_CourseReservationId" })


                        <div class="form-group">






                            <div class="row ">
                                <div>


                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @if (@ViewBag.LangEn == true)
                                            {
                                                <div class="col-md-6" style="margin-bottom:17px;">
                                                    @Html.Label(Resources.EnName, htmlAttributes: new { @class = "col-md-4" })
                                                    <div class="col-md-8">
                                                        <div class="col-md-10">
                                                            @Html.TextBoxFor(a => a.EnName, new { @class = "form-control", @readonly = "readonly" })
                                                        </div>
                                                        <div class="col-md-2">
                                                            @Html.ValidationMessageFor(model => model.EnName, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-md-6" style="margin-bottom:17px;">
                                                    @Html.Label(Resources.ArName, htmlAttributes: new { @class = "col-md-4" })
                                                    <div class="col-md-8">
                                                        <div class="col-md-10">
                                                            @Html.TextBoxFor(a => a.ArName, new { @class = "form-control", @readonly = "readonly" })
                                                        </div>
                                                        <div class="col-md-2">
                                                            @Html.ValidationMessageFor(model => model.ArName, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>
                                            }
                                            <div class="col-md-6" style="margin-bottom:17px;">
                                                @Html.Label(Resources.Code, htmlAttributes: new { @class = "col-md-4" })
                                                <div class="col-md-8">
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(a => a.Code, new { @class = "form-control", @id = "_Code", @name = "Code", @readonly = "readonly" })

                                                    </div>
                                                    <div class="col-md-2">
                                                    </div>

                                                </div>
                                            </div>

                                            <div class="col-md-6" style="margin-bottom:17px;">
                                                @Html.Label(Resources.PaidValue, htmlAttributes: new { @class = "col-md-4" })
                                                <div class="col-md-8">
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(m => m.PaidValue, new { @class = "form-control", @Id = "_PaidValue" })
                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.ValidationMessageFor(model => model.PaidValue, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                            </div>



                                            <div class="col-md-6" style="margin-bottom:17px;">
                                                @Html.Label(Resources.PaidDate, htmlAttributes: new { @class = "col-md-4" })
                                                <div class="col-md-8">

                                                    <div class="col-md-10">

                                                        @Html.TextBoxFor(m => m.PaidDate, new { @class = "form-control", @Id = "_PaidDate" })

                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.ValidationMessageFor(model => model.PaidDate, "", new { @class = "text-danger" })
                                                    </div>


                                                </div>

                                            </div>



                                            <div class="col-md-6" style="margin-bottom:17px;">
                                                @Html.Label(Resources.ReceiptVoucherCode, htmlAttributes: new { @class = "col-md-4" })
                                                <div class="col-md-8">
                                                    <div class="col-md-10">

                                                        @Html.TextBoxFor(m => m.ReceiptVoucherCode, new { @class = "form-control", @Id = "_ReceiptVoucherCode" })

                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.ValidationMessageFor(model => model.ReceiptVoucherCode, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                            </div>

                                            <div class="col-md-6" style="margin-bottom:17px;">
                                                @Html.Label(Resources.ReceiptVoucherDate, htmlAttributes: new { @class = "col-md-4" })
                                                <div class="col-md-8">
                                                    <div class="col-md-10">
                                                        @Html.TextBoxFor(m => m.ReceiptVoucherDate, new { @class = "form-control", @Id = "_ReceiptVoucherDate" })
                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.ValidationMessageFor(model => model.ReceiptVoucherDate, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                            </div>




                                <div class="col-md-6" style="margin-bottom:17px;">
                                @Html.Label(Resources.EmployeeSafeId, htmlAttributes: new { @class = "col-md-4" })
                                <div class="col-md-8">
                                    <div class="col-md-10">
                                        @Html.DropDownList("EmployeeSafeId", (SelectList)ViewBag.EmployeeSafeId, Messages.ChooseEmployeeSafe, new { @class = "form-control", @id = "_EmployeeSafeId", @name = "EmployeeSafeId" })
                                    </div>
                                    <div class="col-md-2">
                                        @*@Html.ValidationMessageFor(model => model.EmployeeSafeId, "", new { @class = "text-danger" })*@
                                    </div>

                                </div>
                            </div>




                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>
</form>
            </div>
            <div class="modal-footer">
                <div class="text-left">
                    <a href="#" class="btn btn-primary" id="SAVEREC">@Messages.SaveBTN</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">@Messages.Cancel</a>

                </div>
            </div>
        </div>
    </div>
</div>





@section scripts
{

    <script>
          $("#CodeId").chosen();

            $("#CodeId").change(function () {

                $.ajax({
                    url:"@Url.Action("GetReceiptVoucherByCode","ReceiptVoucher")",

                    data: { NCode: $("#CodeId").val() },
                    success: function (res) {
                       
                            $("#ID").val(res.ID);
                            $("#TraineeId").val(res.TraineeId);
                            //$("#CodeId :selected").val(res.CodeId);
                            $("#ArNameLevelDateCodeId").val(res.ArNameLevelDateCodeId);
                            $("#EnNameLevelDateCodeId").val(res.EnNameLevelDateCodeId);

                            $("#Code").val(res.Code);
                            $("#FileNo").val(res.FileNo);

                            $("#TraineeEvaluationId").val(res.TraineeEvaluationId);

                            $("#ArName").val(res.ArName);
                            $("#EnName").val(res.EnName);

                            $("#StudyPeriodSettingName").val(res.StudyPeriodSettingName);
                            $("#StudyPeriodSettingEnName").val(res.StudyPeriodSettingEnName);

                            $("#VisualStudyCount").val(res.VisualStudyCount);
                            $("#PracticalCount").val(res.PracticalCount);
                            $("#LevelTotal").val(res.LevelTotal);

                            $("#PaidValue").val(res.PaidValue);
                            $("#PaidDate").val(res.PaidDate);
                            $("#ReceiptVoucherCode").val(res.ReceiptVoucherCode);
                            $("#ReceiptVoucherDate").val(res.ReceiptVoucherDate);
                            $("#CourseReservationId").val(res.CourseReservationId);
                            $("#EmployeeSafeId").val(res.EmployeeSafeId);
                        
                        
                       

                    },
                    error: function (data) {
                        $("#ID").val("");
                            $("#TraineeId").val("");
                            //$("#CodeId :selected").val(res.CodeId);
                            $("#ArNameLevelDateCodeId").val("");
                            $("#EnNameLevelDateCodeId").val("");

                            $("#Code").val("");
                            $("#FileNo").val("");

                            $("#TraineeEvaluationId").val("");

                            $("#ArName").val("");
                            $("#EnName").val("");

                            $("#StudyPeriodSettingName").val("");
                            $("#StudyPeriodSettingEnName").val("");

                            $("#VisualStudyCount").val("");
                            $("#PracticalCount").val("");
                            $("#LevelTotal").val("");

                            $("#PaidValue").val("");
                            $("#PaidDate").val("");
                            $("#ReceiptVoucherCode").val("");
                            $("#ReceiptVoucherDate").val("");
                            $("#CourseReservationId").val("");
                            $("#EmployeeSafeId").val("");

                    }
                });
            });


        $(function () {
            var _Msg = $("#CourseReservation_Msg").val();
            if (_Msg != "") {

                toastr.success(_Msg, 'اشعار', { timeOut: 4000 });
                $("#CourseReservation_Msg").val("");
            }
            $("#CourseStartDate").datepicker({
                minDate: "01/1/2019",
                maxDate: "0D",
                numberOfMonths: 2,
                   dateFormat: 'mm/dd/yy', //<----here
                onSelect: function (selected) {
                    $("#CourseEndDate").datepicker("option", "minDate", selected);
                }
            });
            $("#CourseEndDate").datepicker({
                 minDate: $("#CourseStartDate").val(),
                maxDate: "0D",
                numberOfMonths: 2,
                dateFormat: 'mm/dd/yy', //<----here
                onSelect: function (selected) {
                    $("#CourseStartDate").datepicker("option", "maxDate", selected);
                }
            });

            $("#_CourseStartDate").datepicker({
                minDate: "01/1/2019",
                maxDate: "0D",
                numberOfMonths: 2,
                   dateFormat: 'mm/dd/yy', //<----here
                onSelect: function (selected) {
                    $("#CourseEndDate").datepicker("option", "minDate", selected);
                }
            });
            $("#_CourseEndDate").datepicker({
                minDate: $("#_CourseStartDate").val(),
                maxDate: "0D",
                numberOfMonths: 2,
                   dateFormat: 'mm/dd/yy', //<----here
                onSelect: function (selected) {
                    $("#_CourseStartDate").datepicker("option", "maxDate", selected);
                }
            });
            $("#PaidDate").datepicker({
                   dateFormat: 'mm/dd/yy'
            });
            $("#ReceiptVoucherDate").datepicker({
                   dateFormat: 'mm/dd/yy'
            });

            $("#_PaidDate").datepicker({
                   dateFormat: 'mm/dd/yy'

            });
            $("#_ReceiptVoucherDate").datepicker({
                   dateFormat: 'mm/dd/yy'

            });

            //$("#btnEdit").click(function () {
            //    $("#myForm").attr("action", "/AutoDriveMain/CourseReservation/EditCourseReservation");
            //});
            //$("#btnDelete").click(function () {
            //    $("#myForm").attr("action", "/AutoDriveMain/CourseReservation/DeleteCourseReservation");
            //});



          
        });

        function MapJson(Obj, form) {
            debugger
            $.each(Obj,function(key,value) {
          form.find("input[name='"+key+"']").val(value);
      });
        }
        var DATATABLE = "";
                //Show Delet Msg Confirmation
        function DeleteConfirmation(id) {
            
        bootbox.confirm({
            title:"@Messages.Delete.ToString()",
            message: "@Messages.ConfirmDeleteMsg",
            size: 'small',
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i> @Messages.BackBtn',
                    className: 'btn-info'
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> @Messages.ConfirmBtn',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    deleteRecord(id)
                }
                else {
                    return true;
                }
            }
        });

    }
         function deleteRecord(id) {
            $.ajax({
                type: "post",
                url: '@Url.Action("Delete","ReceiptVoucher")' + '?ID=' + id,

                success: function (respons) {
                    debugger
                    if (respons.status) {
                        toastr.success("", respons.Msg, { timeOut: 3000 });
                        DATATABLE.ajax.reload();

                    }
                    else {
                    toastr.error("",respons.Msg ,{ timeOut: 1000 });

                    }

                },

                fail: function (xhr, msg, errorThrown) {
                    toastr.error("@Messages.DeleteErr", msg, { timeOut: 1000 });

                },
                error: function (xhr, statusText, errorThrown) {
                    toastr.error("@Messages.DeleteErr",'' ,{ timeOut: 1000 });
                }
            });

        }


        function GetDate(data) {
            debugger
            var date = new Date(parseInt(data.substr(6)));
            var month = date.getMonth() + 1
            return date.getFullYear() + "/" + month + "/" + date.getDate();
        }
            function Save() {
                if ($("#formDataTable").valid()) {

                var data = $("#formDataTable").serialize();
                $.ajax({
                    type: "post",
                    url: "@Url.Action("Save","ReceiptVoucher")",
                    data: data,
                    success: function (response) {
                        if (response.status == true) {

                            DATATABLE.ajax.reload();
                                toastr.success("@Messages.SaveSucc",'', { timeOut: 4000 });
                            $("#MyModalDataTable").modal("hide");
                        }
                        else {
                            toastr.error("@Messages.SaveErr", response.Msg, { timeOut: 3000 });

                        }
                    }


                });
            }
            else {
                    return false;
                }
        }


            function AddNew(ID) {
            $("#form")[0].reset();
            $("#Modaltitle").html("@Messages.AddReceiptVoucher");
                $("#ID").val("0");
            $("#MyModal").modal()
        }

        function Edit(id) {
            $("#Modaltitle").html("@Messages.Edit");
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetbyID","ReceiptVoucher")"+"/"+id,
                success: function (res) {
                    debugger
                    MapJson(res, $("form"));
                    $("#MyModalDataTable").modal();
                    $("#_ID").val(res.ID);
                    $("#_TraineeId").val(res.TraineeId);
                    $("#_PaidValue").val(res.PaidValue);
                    $("#_PaidDate").val(res.PaidDate);
                    $("#_ReceiptVoucherCode").val(res.ReceiptVoucherCode);
                    $("#_ReceiptVoucherDate").val(res.ReceiptVoucherDate);
                    $("#_CourseReservationId").val(res.CourseReservationId);
                    $("#_EmployeeSafeId").val(res.EmployeeSafeId);

                }
            })
        }

       
    $(document).ready(function () {

        $("#ADDNEWREC").click(function () {
            AddNew(0);
        });

             DATATABLE = $('table').DataTable({
                "ajax": {
                    'url': "@Url.Action("Getall","ReceiptVoucher")",
                    'type': "GET"
                },
                "columns": [
                    {
                        "data": null, "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },
                    
                    { "data": '@ViewBag.CheckUS' == "En-Us" ? "EnName" : "ArName" },
                    {"data":"Code"},
                    { "data": "PaidValue" },
                    { "data": "PaidDate"  },
                    { "data": "ReceiptVoucherCode" },
                    { "data": "ReceiptVoucherDate" },
                    { "data": "EmployeeSafeId" },
                   
                    {
                        "data": "ID", "render": function (data) {

                            return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='Edit(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>" + "<botton class='btn btn-danger ED' style='margin-topitem.BankName):3px' onclick='DeleteConfirmation(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                        }
                    },



                 ],
                     columnDefs: [
   
                         {
                             targets: 3,   type:  'datetime',
                def:   function () { return new Date(); },
                format: 'D MMM YYYY HH:mm',
                         }
        
       

                ],
                "language": {
                    "sEmptyTable": "@Messages.sEmptyTable",
                    "sLoadingRecords": "@Messages.sLoadingRecords",
                    "sProcessing": "@Messages.sProcessing",
                    "sLengthMenu": "@Messages.sLengthMenu",
                    "sZeroRecords": "@Messages.sZeroRecords",
                    "sInfo": "@Messages.sInfo",
                    "sInfoEmpty": "@Messages.sInfoEmpty",
                    "sInfoFiltered": "@Messages.sInfoFiltered",
                    "sInfoPostFix": "",
                    "sSearch": "@Messages.sSearch",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "@Messages.sFirst",
                        "sPrevious": "@Messages.sPrevious",
                        "sNext": "@Messages.sNext",
                        "sLast": "@Messages.sLast"
                    },
                    "oAria": {
                        "sSortAscending": ": @Messages.sSortAscending",
                        "sSortDescending": ": @Messages.sSortDescending"
                    }
                },
                info: false,

            })
            DATATABLE.on('order.dt search.dt', function () {
                DATATABLE.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

                $("#SAVEREC").click(function () {
                    Save();
                });



    });


    </script>
}
