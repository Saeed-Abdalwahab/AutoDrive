@model AutoDrive.VM.AutoDriveHR.DepartmentVM

@{
    ViewBag.Title = Messages.Departments;
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@section styles{
    <style>
        .modal-body {
            height: auto;
        }
    </style>
}
<div class="text-center">
    <h3 id="HeaderOdPage" class="center info">@Messages.Departments ( @Messages.MainDepartments )</h3>
</div>
<div class="modal fade bd-example-modal-sm" id="MyModal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="Modaltitle"></h4>
            </div>
            <div class="modal-body" style="height:auto;overflow-y:hidden">
                <form id="form">
                    <div class="form-horizontal">

                        @Html.HiddenFor(m => m.ID)
                        <div class="form-group">
                            @Html.LabelFor(x => x.EnName, htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.EnName, new { htmlAttributes = new { @class = "form-control" } })

                                @Html.ValidationMessageFor(model => model.EnName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.Name, htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.ParentId, htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(x => x.ParentId, ViewBag.Departments as SelectList, Messages.DepartmentDropDown, new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="text-left">
                    <a href="#" class="btn btn-primary" id="SAVEREC">@Messages.SaveBTN</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">@Messages.Cancel</a>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="container" style="margin-top:3%">
    <div class="row">
        <div class="col-md-3">
            <div id="Tree"></div>
        </div>
        <div class="col-md-9"  id="DivTableContainer">
    <button class="btn btn-primary btn-lg btn-round navbar-fixed-bottom" id="ADDNEWREC" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="@Messages.AddNew" style="left:74%;bottom:15%"><span class="glyphicon glyphicon-plus"></span> </button>
                   <table class="table table-striped jambo_table bulk-action">
                       <thead>
                           <tr>
                               <th>
                                   م
                               </th>
                               <th>
                                   @Html.DisplayNameFor(x => x.Name)
                               </th>
                               <th>
                                   @Html.DisplayNameFor(x => x.EnName)
                               </th>
                               <th style="width:80px"></th>
                           </tr>
                       </thead>

                       <tbody></tbody>
                   </table>
        </div>
        
    </div>

    
</div>
@section scripts
{
    <link href="~/Content/jsTree/themes/default/style.css" rel="stylesheet" />
    <script src="~/Scripts/jsTree3/jstree.js"></script>
    <script>
            var selectedNodeValue = 0;

        function MapJson(Obj, form) {
            $.each(Obj, function (key, value) {
                form.find("input[name='" + key + "']").val(value);
                form.find("select[name='" + key + "']").val(value);
            });
        }
        var DATATABLE = "";
                //Show Delet Msg Confirmation
    function DeleteConfirmation(id) {
        bootbox.confirm({
            title:"@Messages.Delete.ToString()",
            message: "@Messages.ConfirmDeleteMsg",
            size: 'small',
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i> @Messages.BackBtn',
                    className: 'btn-info'
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> @Messages.ConfirmBtn',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    deleteRecord(id)
                }
                else {
                    return true;
                }
            }
        });

    }
         function deleteRecord(id) {
            $.ajax({
                type: "post",
                url: '@Url.Action("Delete","Department")' + '?ID=' + id,

                success: function (respons) {
                    debugger
                    if (respons.status) {
                        toastr.success("", respons.Msg, { timeOut: 3000 });
                        DATATABLE.ajax.reload();
                        //tree.jstree("refresh");
                            $('#Tree').jstree(true).refresh();

                    }
                    else {
                    toastr.error("",respons.Msg ,{ timeOut: 1000 });

                    }

                },

                fail: function (xhr, msg, errorThrown) {
                    toastr.error("@Messages.DeleteErr", msg, { timeOut: 1000 });

                },
                error: function (xhr, statusText, errorThrown) {
                    toastr.error("@Messages.DeleteErr",'' ,{ timeOut: 1000 });
                }
            });

        }
        function GetDate(data) {
            debugger
            var date = new Date(parseInt(data.substr(6)));
            var month = date.getMonth() + 1
            return date.getFullYear() + "/" + month + "/" + date.getDate();
        }
            function Save() {
                if ($("#form").valid()) {

                var data = $("#form").serialize();
                $.ajax({
                    type: "post",
                    url: "@Url.Action("save","Department")",
                    data: data,
                    success: function (response) {
                        if (response.status == true) {

                            DATATABLE.ajax.reload();
                            $('#Tree').jstree(true).refresh();
                            toastr.success("@Messages.SaveSucc", '', { timeOut: 4000 });
                            if (data.split("&")[0] == "ID=0") {
                                AddNew();
                            }
                            else
                            {
                            $("#MyModal").modal("hide");
                            }
                        }
                        else {
                            toastr.error("@Messages.SaveErr", response.Msg, { timeOut: 3000 });

                        }
                    }

                });
            }
            else {
                    return false;
                }
        }


            function AddNew() {
            $("#form")[0].reset();
            $("#Modaltitle").html("@Messages.AddDepartment");
                $("#ID").val("0");
                $("span[id*='error']").text("");
                if (selectedNodeValue != undefined && parseInt(selectedNodeValue) != 0) {

                    $("#ParentId").val(selectedNodeValue);
                    $("#ParentId").parent().parent().attr("hidden", "hidden");
                }
                else {
                    $("#ParentId").removeAttr("hidden" );
                }
                $("#MyModal").modal("show");
        }

        function Edit(id) {
            $("#Modaltitle").html("@Messages.Edit");
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetbyID","Department")"+"/"+id,
                success: function (rs) {
                    debugger
                    MapJson(rs, $("form"));
                $("span[id*='error']").text("");
                    $("#MyModal").modal();
                }
            })
        }


        $(document).ready(function () {
        $("input").keyup(function (e) {
            if (e.keyCode == 13) {
                Save();
                $("[class*='input-validation-error']").focus();

            }
        });
        $("#ADDNEWREC").click(function () {
            AddNew(0);
        });

             DATATABLE = $('table').DataTable({
                 "ajax": {
                     'url': "@Url.Action("Getall","Department")" + '?ID=' + parseInt(selectedNodeValue),
                    'type': "GET"
                },
                "columns": [
                    {
                        "data": null, "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },

                    { "data": "Name" },
                    { "data": "EnName" },
                  

                    {
                        "data": "ID", "render": function (data) {

                            return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='Edit(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>" + "<botton class='btn btn-danger ED' style='margin-topitem.BankName):3px' onclick='DeleteConfirmation(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                        }
                    },



                ],
                "language": {
                    "sEmptyTable": "@Messages.sEmptyTable",
                    "sLoadingRecords": "@Messages.sLoadingRecords",
                    "sProcessing": "@Messages.sProcessing",
                    "sLengthMenu": "@Messages.sLengthMenu",
                    "sZeroRecords": "@Messages.sZeroRecords",
                    "sInfo": "@Messages.sInfo",
                    "sInfoEmpty": "@Messages.sInfoEmpty",
                    "sInfoFiltered": "@Messages.sInfoFiltered",
                    "sInfoPostFix": "",
                    "sSearch": "@Messages.sSearch",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "@Messages.sFirst",
                        "sPrevious": "@Messages.sPrevious",
                        "sNext": "@Messages.sNext",
                        "sLast": "@Messages.sLast"
                    },
                    "oAria": {
                        "sSortAscending": ": @Messages.sSortAscending",
                        "sSortDescending": ": @Messages.sSortDescending"
                    }
                },
                info: false,

            })
            DATATABLE.on('order.dt search.dt', function () {
                DATATABLE.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

                $("#SAVEREC").click(function () {
            Save();
                });
        //Tree
     var tree=   $('#Tree').jstree({
            'core': {
                'data': {
                    'url': '@Url.Action("TreeData","Department")',
                    'dataType': 'json'
                }
            }
        });
            $('#Tree').on("changed.jstree", function (e, data) {
                
                selectedNodeValue = data.selected[0];
                $("#DivTableContainer").css("display","block");
                $("#DivTableContainer table").css("width", "100%");
                //DATATABLE.ajax.reload();
                if (selectedNodeValue == undefined) {

                    DATATABLE.ajax.reload();
                }
                else if ( selectedNodeValue == 0) {

                    $("#HeaderOdPage").text("@Messages.Departments" + " (  @Messages.MainDepartments   )")
                DATATABLE.ajax.url("@Url.Action("Getall","Department")" + "?ID=" + parseInt(selectedNodeValue) ).load();

                }
                else {
                    
                    $("#HeaderOdPage").text("@Messages.Departments"  +" ( "+$('#Tree').jstree('get_selected', true)[0].text+" )")
                DATATABLE.ajax.url("@Url.Action("Getall","Department")" + "?ID=" + parseInt(selectedNodeValue) ).load();
                    }


  });

    });


    </script>
}
