@using AutoDriveResources
@model AutoDrive.VM.AutoDrivePayroll.JobLevelVM
@{
    ViewBag.Title = Resources.JobLevel;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="x_content">
    <h2> @Resources.JobLevel</h2>

    <div class="modal" id="myModel" role="dialog" style="top:26%;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" onclick="Cancel()" data-dismiss="modal">&times;</a>
                    <h4 id="modalTitle"></h4>
                </div>
                <div class="modal-body" id="create">
                    <form id="form">

                        <div class="form-horizontal">
                            @Html.HiddenFor(m => m.ID, new { @id = "JobLevelID" })
                            <div class="form-group">
                                @Html.Label(Resources.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ChangeName()" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    <span id="NameValdiation" style="color:#a94442;display:none;"></span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label(Resources.EnName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EnName, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ChangeENName()" } })
                                    @Html.ValidationMessageFor(model => model.EnName, "", new { @class = "text-danger" })
                                    <span id="EnNameValdiation" style="color:#a94442;display:none;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label(Resources.Sort, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LevelSort, new { htmlAttributes = new { @class = "form-control", @onkeyup = "LevelSortChange()" } })
                                    @Html.ValidationMessageFor(model => model.LevelSort, "", new { @class = "text-danger" })
                                    <span id="LevelSortValdiation" style="color:#a94442;display:none;"></span>

                                </div>
                            </div>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" id="SaveJobLevel"></a>
                    <a href="#" class="btn btn-primary" onclick="Cancel()" data-dismiss="modal">@Resources.Cancel</a>
                </div>
            </div>
        </div>
    </div>



    <div class="modal" id="myModelDelete" role="dialog" style="top:26%;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>@Resources.DeleteJobLevel</h4>
                </div>
                <div class="modal-body text-center" id="Delete">
                    <h2>@Resources.DeleteMessage</h2>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-danger" id="DeleteJobLevel">@Resources.Delete</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">@Resources.Cancel</a>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-12" id="con">
        <table id="JobLevelTB" class="table table-striped jambo_table bulk_action">
            <thead>
                <tr>
                    <th>@Resources.SerialNumber</th>
                    <th>@Resources.Name</th>
                    <th>@Resources.EnName</th>
                    <th>@Resources.Sort</th>
                    <th>@Resources.Edit</th>
                    <th>@Resources.Delete</th>
                </tr>
            </thead>
        </table>

        <button type="button" class="btn btn-primary btn-lg btn-round navbar-fixed-bottom " onclick="Create()" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="@Resources.JobLevel" style="left:74%;bottom:15%"><span class="glyphicon glyphicon-plus"></span></button>
    </div>

</div>
@section scripts{
    <script>
    let DeletedID;
    function Create() {
        $("span[class*='error']").text("")
            $("#form")[0].reset();
            $("#modalTitle").html("@Resources.AddJobLevel");
            $("#SaveJobLevel").html("@Resources.Add");
            $("#JobLevelID").val(0);
        $("#myModel").modal();
        $("#Name").focus();
        }
       $("#SaveJobLevel").click(function () {

            SaveJobLevel();
       });
    $("#Name").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            SaveJobLevel()

        }
        else {
            if ($("#Name").val() == "") {
                $("#Name").focus();
            }else if ($("#EnName").val() == "") {
                $("#EnName").focus();
            }else if ($("#LevelSort").val() == "") {
                $("#LevelSort").focus();
            }
        }
    }
    });
      $("#EnName").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            SaveJobLevel()

        }
        else {
           if ($("#Name").val() == "") {
                $("#Name").focus();
            }else if ($("#EnName").val() == "") {
                $("#EnName").focus();
            }else if ($("#LevelSort").val() == "") {
                $("#LevelSort").focus();
            }
        }
    }
      });
     $("#LevelSort").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            SaveJobLevel()

        }
        else {
            if ($("#Name").val() == "") {
                $("#Name").focus();
            }else if ($("#EnName").val() == "") {
                $("#EnName").focus();
            }else if ($("#LevelSort").val() == "") {
                $("#LevelSort").focus();
            }
        }
    }
    });
    function formValidation() {
        if ($("#form").valid()) {
            return true;
        }
        return false;
    }
    $("#DeleteJobLevel").click(function () {
        url = "/JobLevel/Delete?id=" + DeletedID;
        $.ajax({
            type: "POST",
            url: url,
            success: function (rs) {
                $("#myModelDelete").modal("hide");
               $("#JobLevelTB").DataTable().ajax.reload();
                toastr.success('@Messages.JobLevelDelete', '', { timeOut: 4000 })
            }, error: function () {
              toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorDeletion ', { timeOut: 3000 });
            }
        })
    })
    function GetLanguage() {
        debugger;
                var EN = {
                    "sEmptyTable": "No data available in table",
                    "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "sInfoEmpty": "Showing 0 to 0 of 0 entries",
                    "sInfoFiltered": "(filtered from _MAX_ total entries)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ",",
                    "sLengthMenu": "Show _MENU_ entries",
                    "sLoadingRecords": "Loading...",
                    "sProcessing": "Processing...",
                    "sSearch": "Search:",
                    "sZeroRecords": "No matching records found",
                    "oPaginate": {
                        "sFirst": "First",
                        "sLast": "Last",
                        "sNext": "Next",
                        "sPrevious": "Previous"
                    },
                    "oAria": {
                        "sSortAscending": ": activate to sort column ascending",
                        "sSortDescending": ": activate to sort column descending"
                    }
                };
                var AR =
                {
                    "sEmptyTable": "ليست هناك بيانات متاحة في الجدول",
                    "sLoadingRecords": "جارٍ التحميل...",
                    "sProcessing": "جارٍ التحميل...",
                    "sLengthMenu": "أظهر _MENU_ مدخلات",
                    "sZeroRecords": "لم يعثر على أية سجلات",
                    "sInfo": "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                    "sInfoEmpty": "يعرض 0 إلى 0 من أصل 0 سجل",
                    "sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
                    "sInfoPostFix": "",
                    "sSearch": "ابحث:",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "الأول",
                        "sPrevious": "السابق",
                        "sNext": "التالي",
                        "sLast": "الأخير"
                    }
                };
                let LangFlag = @(System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.IsRightToLeft ?"true":"false");
                return (LangFlag == false ? EN : AR);
            }
    function SaveJobLevel() {
        if (!formValidation()) {
            return true;
        }

            var data = $("#form").serialize();
            $.ajax({
                type: "post",
                url: "/JobLevel/SaveJobLevel",
                data: data,
                success: function (response) {
                    if (response.msg != "Model is null") {

                        if (response.msg==true) {
                            $("#JobLevelTB").DataTable().ajax.reload();
                            $("#form")[0].reset();
                            $("#Name").focus();

                            if (data.split("&")[0] == "ID=0") {
                                toastr.success('@Messages.JobLevelSave', '', { timeOut: 4000 });

                            }
                            else {
                                 $("#myModel").modal("hide");
                                toastr.success('@Messages.JobLevelEdit', '', { timeOut: 4000 });
                            }
                        }



                    }
                    else {
                         $("#myModel").modal("show");
                      if( !($("#Name").val().replace(/\s/g, '').length))
                      {
                          
                          $("#NameValdiation").show();
                          $("#NameValdiation").html('@Resources.SpaceName');
                      }

                      else
                            $("#NameValdiation").hide();
                        if (!($("#EnName").val().replace(/\s/g, '').length)) {
                            $("#EnNameValdiation").show();
                            $("#EnNameValdiation").html('@Resources.SpaceName')
                        }

                        else
                            $("#EnNameValdiation").hide();
                    }


                },
                error: function () {
                    if (data.split("&")[0] == "ID=0") {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorAdding ', { timeOut: 3000 });

                    }
                    else {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorModification ', { timeOut: 3000 });
                    }

                }
            });

        }
    $(document).ready(function () {

        $('#JobLevelTB').DataTable({
            "ajax": {
                'url': "GetJobLevel",
                'type': "GET"
            }, "columns": [
                 {
                        "data": null, orderable: false,
                        "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },
                { "data": "Name" },
                { "data": "EnName" },
                { "data": "LevelSort" },
               {
                        "data": "ID", "render": function (data) {
                            return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='EditJobLevel(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>"
                        }
                    },
                    {
                        "data": "ID", "render": function (data) {
                            return "<botton class='btn btn-danger ED' style='margin-top:3px' onclick='DeleteJobLevel(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                        }
                    },
            ], "language": GetLanguage()
            
        });
     });
    function ChangeName() {
         $("#NameValdiation").hide();
         let id = $("#JobLevelID").val();
        let name = $("#Name").val();
          var url = "/JobLevel/CheckName?Name="+name+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                debugger;
                if (rs.msg == false) {
                    if ($("#Name").val()!="") {
                        $("#NameValdiation").show();
                    $("#NameValdiation").html('@Messages.NameValidationError');
                    }
                    
                }
                else
                $("#NameValdiation").hide();
            }
        });
    }

    function LevelSortChange() {
        $("#LevelSortValdiation").hide();
        if ($("#LevelSort").val()!="") {
               let id = $("#JobLevelID").val();
        let LevelSort = $("#LevelSort").val();
          var url = "/JobLevel/CheckLevelSort?LevelSort="+LevelSort+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                debugger;
                if (rs.msg == false) {
                    if ($("#LevelSort").val() != "") {
                          $("#LevelSortValdiation").show();
                    $("#LevelSortValdiation").html('@Messages.DegreeSortValdiation');
                    }
                  
                }
                else
                $("#LevelSortValdiation").hide();
            }
        });
        }
    }
    function Cancel() {
        $("#NameValidation").hide();
        $("#ENNameValidation").hide();
        $("#LevelSortValdiation").hide();
    }
    function ChangeENName() {
         $("#EnNameValdiation").hide();
        let id = $("#JobLevelID").val();
        let name = $("#EnName").val();
          var url = "/JobLevel/CheckENName?Name="+name+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                if (rs.msg == false) {
                    if ($("#EnName").val()!="") {
                         $("#EnNameValdiation").show();
                    $("#EnNameValdiation").html('@Messages.NameValidationError');
                    }
                   
                }
                else
                $("#EnNameValdiation").hide();
            }
        });
        }


    function EditJobLevel(id) {

        let url = "/JobLevel/GetById?id=" + id;
        $.ajax({
            type: "Get",
            url: url,
            success: function (rs) {
                $("#myModel").modal("show");
        $("span[class*='error']").text("")
                 $("#form")[0].reset();
                $("#modalTitle").html('@Resources.JobLeveledit');
                $("#SaveJobLevel").html("@Resources.Edit")
                $("#Name").val(rs.data.Name);
                $("#EnName").val(rs.data.EnName);
                $("#JobLevelID").val(rs.data.ID);
                $("#LevelSort").val(rs.data.LevelSort);
            }
        })
        }
    function DeleteJobLevel(id) {
        $("#myModelDelete").modal("show");
        DeletedID = id;
    }
    </script>
}


