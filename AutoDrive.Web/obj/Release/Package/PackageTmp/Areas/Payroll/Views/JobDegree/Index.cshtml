@using AutoDriveResources
@model AutoDrive.VM.AutoDrivePayroll.JobDegreeVM
@{
    ViewBag.Title = Resources.JobDegree;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .topclass {
        top: 26%;
    }
</style>

<div class="x_content">
    <h2>@Resources.JobDegree</h2>

    <div class="modal topclass" id="myModel" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" onclick="Cancel()" data-dismiss="modal">&times;</a>
                    <h4 id="modalTitle"></h4>
                </div>
                <div class="modal-body" id="create">
                    <form id="form">

                        <div class="form-horizontal">

                            @Html.HiddenFor(m => m.ID, new { @id = "JobDegreeID" })
                            <div class="form-group">
                                @Html.Label(Resources.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ChangeName()" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    <span id="NameValdiation" style="color:#a94442;display:none;"></span>

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label(Resources.EnName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ENName, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ChangeENName()" } })
                                    @Html.ValidationMessageFor(model => model.ENName, "", new { @class = "text-danger" })
                                    <span id="EnNameValdiation" style="color:#a94442;display:none;"></span>

                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label(Resources.Sort, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DegreeSort, new { htmlAttributes = new { @class = "form-control", @onkeyup = "DegreeSortChange()" } })
                                    @Html.ValidationMessageFor(model => model.DegreeSort, "", new { @class = "text-danger" })
                                    <span id="DegreeSortValdiation" style="color:#a94442;display:none;"></span>

                                </div>
                            </div>
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" id="SaveJobDegree"></a>
                    <a href="#" class="btn btn-primary" onclick="Cancel()" data-dismiss="modal">@Resources.Cancel</a>
                </div>
            </div>
        </div>
    </div>



    <div class="modal" id="myModelDelete" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>@Resources.DeleteJobDegree</h4>
                </div>
                <div class="modal-body text-center" id="Delete">
                    <h2>@Resources.DeleteMessage</h2>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-danger" id="DeleteJobDegree">@Resources.Delete</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">@Resources.Cancel</a>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-12" id="con">
        <table id="JobDegreeTB" class="table table-striped jambo_table bulk_action">
            <thead>
                <tr>
                    <th>@Resources.SerialNumber</th>
                    <th>@Resources.Name</th>
                    <th>@Resources.EnName</th>
                    <th>@Resources.Sort</th>
                    <th>@Resources.Edit</th>
                    <th>@Resources.Delete</th>
                </tr>
            </thead>
        </table>

        <button type="button" class="btn btn-primary btn-lg btn-round navbar-fixed-bottom " onclick="Create()" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="@Resources.AddJobDegree" style="left:74%;bottom:15%"><span class="glyphicon glyphicon-plus"></span></button>
    </div>

</div>
@section scripts{
    <script>
    let DeleteID;
    function Create() {
          $("span[class*='error']").text("")
            $("#form")[0].reset();
            $("#modalTitle").html("@Resources.AddJobDegree");
            $("#SaveJobDegree").html("@Resources.Add");
            $("#JobDegreeID").val(0);
        $("#myModel").modal();
        $("#Name").focus();
         
    }
     $("#Name").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            Save()

        }
        else {
            if ($("#Name").val() == "") {
                $("#Name").focus()
            } else if ($("#ENName").val() == "") {
                $("#ENName").focus()

            } else if ($("#DegreeSort").val() == "") {
                $("#DegreeSort").focus();
            }
        }
    }
    });
      $("#ENName").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            Save()

        }
        else {
           if ($("#Name").val() == "") {
                $("#Name").focus()
            } else if ($("#ENName").val() == "") {
                $("#ENName").focus()

            } else if ($("#DegreeSort").val() == "") {
                $("#DegreeSort").focus();
            }
        }
    }
      });
     $("#DegreeSort").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            Save()

        }
        else {
           if ($("#Name").val() == "") {
                $("#Name").focus()
            } else if ($("#ENName").val() == "") {
                $("#ENName").focus()

            } else if ($("#DegreeSort").val() == "") {
                $("#DegreeSort").focus();
            }
        }
    }
    });
    function formValidation() {
        if ($("#form").valid()) {
            return true;
        }
        return false;
    }
       $("#SaveJobDegree").click(function () {
            Save();
       });
     function Save() {

          if (!formValidation()) {
            return true;
        }
            var data = $("#form").serialize();
            $.ajax({
                type: "post",
                url: "/JobDegree/Save",
                data: data,
                success: function (response) {
                    if (response.msg != "Model is null") {
                        if (response.msg == true) {
                            debugger;
                               $("#JobDegreeTB").DataTable().ajax.reload();
                             $("#form")[0].reset();
                            $("#Name").focus();
                            $("#NameValidation").hide();
                            $("#ENNameValidation").hide();
                            $("#DegreeSortValdiation").hide();
                            if (data.split("&")[0] == "ID=0") {
                                toastr.success('@Messages.JobDegreeSave', '', { timeOut: 4000 });

                            }
                            else {
                                $("#myModel").modal("hide");
                                toastr.success('@Messages.JobDegreeEdit', '', { timeOut: 4000 });
                            }
                        }

                    }
                    else {
                        
                      if( !($("#Name").val().replace(/\s/g, '').length))
                      {
                          
                          $("#NameValdiation").show();
                          $("#NameValdiation").html('@Resources.SpaceName');
                      }

                      else
                            $("#NameValidation").hide();
                        if (!($("#ENName").val().replace(/\s/g, '').length)) {
                            $("#EnNameValdiation").show();
                            $("#EnNameValdiation").html('@Resources.SpaceName')
                        }

                      else
                            $("#ENNameValidation").hide();

                      // toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorAdding ', { timeOut: 3000 });
                    }


                },
                error: function () {
                    if (data.split("&")[0] == "ID=0") {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorAdding ', { timeOut: 3000 });

                    }
                    else {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorModification ', { timeOut: 3000 });
                    }

                }
            });

    }
    function DegreeSortChange() {
        debugger
        let id = $("#JobDegreeID").val();
        if ($("#DegreeSort").val()!="") {
           let DegreeSort = $("#DegreeSort").val();
          var url = "/JobDegree/CheckDegreeSort?DegreeSort="+DegreeSort+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                if (rs.msg == false) {
                    if ($("#DegreeSort").val()!="") {
                        $("#DegreeSortValdiation").show();
                    $("#DegreeSortValdiation").html('@Messages.DegreeSortValdiation');
                    }
                    
                }
                else
                $("#DegreeSortValdiation").hide();
            }
        });
        } else
             $("#DegreeSortValdiation").hide();
        
    }
    function ChangeName() {
        $("#NameValdiation").hide();
         let id = $("#JobDegreeID").val();
        let name = $("#Name").val();
          var url = "/JobDegree/CheckName?Name="+name+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                if (rs.msg == false) {
                    if ($("#Name").val()!="") {
                         $("#NameValdiation").show();
                    $("#NameValdiation").html('@Messages.NameValidationError');
                    }
                   
                }
                else
                $("#NameValdiation").hide();
            }
        });
    }
    function Cancel() {
        $("#NameValidation").hide();
        $("#ENNameValidation").hide();
        $("#DegreeSortValdiation").hide();
    }
    function ChangeENName() {
         $("#EnNameValdiation").hide();
        let id = $("#JobDegreeID").val();
        let name = $("#ENName").val();
          var url = "/JobDegree/CheckENName?Name="+name+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                if (rs.msg == false) {
                    if ($("#EnName").val()!="") {
                         $("#EnNameValdiation").show();
                    $("#EnNameValdiation").html('@Messages.NameValidationError');
                    }
                   
                }
                else
                $("#EnNameValdiation").hide();
            }
        });
        }

     $(document).ready(function () {

        $('#JobDegreeTB').DataTable({
            "ajax": {
                'url': "GetJobDegree",
                'type': "GET"
            }, "columns": [
                 {
                        "data": null, orderable: false,
                        "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },
                { "data": "Name" },
                { "data": "ENName" },
                { "data": "DegreeSort" },
               {
                        "data": "ID", "render": function (data) {
                            return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='EditJobDegree(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>"
                        }
                    },
                    {
                        "data": "ID", "render": function (data) {
                            return "<botton class='btn btn-danger ED' style='margin-top:3px' onclick='DeleteJobDegree(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                        }
                    },
            ], "language":GetLanguage()
        });
     });
    function DeleteJobDegree(id) {
         $("#myModelDelete").modal('show');
        DeleteID = id;
    }
       function GetLanguage() {
        debugger;
                var EN = {
                    "sEmptyTable": "No data available in table",
                    "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "sInfoEmpty": "Showing 0 to 0 of 0 entries",
                    "sInfoFiltered": "(filtered from _MAX_ total entries)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ",",
                    "sLengthMenu": "Show _MENU_ entries",
                    "sLoadingRecords": "Loading...",
                    "sProcessing": "Processing...",
                    "sSearch": "Search:",
                    "sZeroRecords": "No matching records found",
                    "oPaginate": {
                        "sFirst": "First",
                        "sLast": "Last",
                        "sNext": "Next",
                        "sPrevious": "Previous"
                    },
                    "oAria": {
                        "sSortAscending": ": activate to sort column ascending",
                        "sSortDescending": ": activate to sort column descending"
                    }
                };
                var AR =
                {
                    "sEmptyTable": "ليست هناك بيانات متاحة في الجدول",
                    "sLoadingRecords": "جارٍ التحميل...",
                    "sProcessing": "جارٍ التحميل...",
                    "sLengthMenu": "أظهر _MENU_ مدخلات",
                    "sZeroRecords": "لم يعثر على أية سجلات",
                    "sInfo": "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                    "sInfoEmpty": "يعرض 0 إلى 0 من أصل 0 سجل",
                    "sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
                    "sInfoPostFix": "",
                    "sSearch": "ابحث:",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "الأول",
                        "sPrevious": "السابق",
                        "sNext": "التالي",
                        "sLast": "الأخير"
                    }
                };
                let LangFlag = @(System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.IsRightToLeft ?"true":"false");
                return (LangFlag == false ? EN : AR);
            }
     $("#DeleteJobDegree").click(function () {
        debugger;
         $.ajax({
                type: "post",
                url: "/JobDegree/delete?id="+DeleteID,

                success: function (response) {
                    $("#myModelDelete").modal("hide");
                    $("#JobDegreeTB").DataTable().ajax.reload();
                    toastr.success('@Messages.JobLevelDelete', '', { timeOut: 4000 })
                },
                error: function () {
                   toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorDeletion ', { timeOut: 3000 });
                }
            });
     });
    function EditJobDegree(id) {
         var url = "/JobDegree/getJobDegreeByID?id=" + id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                $("#modalTitle").html("@Resources.JobDegreeEdit");
                $("#SaveJobDegree").html("@Resources.Edit");
                $("#myModel").modal('show');
                 $("span[class*='error']").text("")
                 $("#form")[0].reset();
                $("#JobDegreeID").val(rs.data.ID)
                $("#Name").val(rs.data.Name);
                $("#ENName").val(rs.data.ENName);
                $("#DegreeSort").val(rs.data.DegreeSort);

            }
        });
    }
    </script>
}


