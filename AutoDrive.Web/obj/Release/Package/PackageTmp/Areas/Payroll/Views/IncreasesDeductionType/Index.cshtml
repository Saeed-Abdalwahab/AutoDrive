
@model AutoDrive.VM.AutoDrivePayroll.IncreasesDeductionTypeVM

@using AutoDriveResources
@{
    ViewBag.Title = Resources.IncreasingDeductionType;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="x_content">
    <h2>@Resources.IncreasingDeductionType</h2>
    <div class="modal" id="myModel" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4 id="modalTitle"></h4>
                </div>
                <div class="modal-body" id="create">
                    <form id="form">
                        <div class="form-horizontal">
                            @Html.HiddenFor(m => m.ID, new { @id = "IncreasingDeductionTypeID" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ChangeName()" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    <span id="NameValdiation" style="color:#a94442;display:none;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EnName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EnName, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ChangeENName()" } })
                                    @Html.ValidationMessageFor(model => model.EnName, "", new { @class = "text-danger" })
                                    <span id="EnNameValdiation" style="color:#a94442;display:none;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.IncreasesOrDeductions, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.IncreasesOrDeductions,Resources.Choose, htmlAttributes: new { @class = "form-control", @style = "width:100%" })
                                    @Html.ValidationMessageFor(model => model.IncreasesOrDeductions, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" id="SaveIncreasesDeductionType"></a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">@Resources.Cancel</a>
                </div>
            </div>
        </div>
    </div>
    <div class="modal" id="myModelDelete" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>@Resources.DeleteIncreasesDeductionType</h4>
                </div>
                <div class="modal-body text-center" id="Delete">
                    <h2>@Resources.DeleteMessage</h2>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-danger" id="DeleteIncreasingDeductionType">@Resources.Delete</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">@Resources.Cancel</a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12" id="con">

        <table id="IncreasesDeductionType" class="table table-striped jambo_table bulk_action">
            <thead>
                <tr>
                    <th>@Resources.SerialNumber</th>
                    <th>@Resources.ArName</th>
                    <th>@Resources.EnName</th>
                    <th>@Resources.IncreasingORdeduction </th>
                    <th>@Resources.Edit</th>
                    <th>@Resources.Delete</th>
                </tr>
            </thead>
        </table>

        <button type="button" class="btn btn-primary btn-lg btn-round navbar-fixed-bottom " onclick="Create()" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="@Resources.AddDeduction" style="left:74%;bottom:15%"><span class="glyphicon glyphicon-plus"></span></button>
    </div>
</div>
@section scripts{

    <script>
    var DeleteID;
    function Create() {
        $("span[class*='error']").text("")
        $("#form")[0].reset();
        $("#modalTitle").html("@Resources.AddIncreasingAndDeductionType");
        $("#SaveIncreasesDeductionType").html("@Resources.Add");
        $("#IncreasingDeductionTypeID").val(0);
        $("#myModel").modal();
        $("#IncreasesOrDeductions").val("");
        $("#Name").focus();
    }
    $("#SaveIncreasesDeductionType").click(function () {
        Save();
    });
     $("#Name").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            event.preventDefault();
            Save()
        }
        else {
        if ($("#EnName").val() == "" && $("#Name").val() != "") {
                $("#EnName").focus();
            } 
            else if ($("#Name").val() == "") {
                $("#Name").focus();
            } else {
                 $("#IncreasesOrDeductions").focus();
            }
        }
    }
    });

     $("#EnName").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            event.preventDefault();
            Save()
        }
        else {
 if ($("#EnName").val() != "" && $("#Name").val() == "") {
                $("#Name").focus();
            } 
            else if ($("#EnName").val() == "") {
                $("#EnName").focus();
            } else {
                 $("#IncreasesOrDeductions").focus();
            }
        }
    }
    });

    function formValidation() {
        if ($("#form").valid()) {
            return true;
        }
        return false;
    }
    function Save() {
     if (!formValidation()) {
            return true;
        }
        debugger;
        var data = $("#form").serialize();
        $.ajax({
            type: "post",
            url: "/IncreasesDeductionType/Save",
            data: data,
            success: function (response) {
                if (response.msg != "Model is null") {
                    if (response.msg == true) {

                        
                    }
                    else {

                        $("#IncreasesDeductionType").DataTable().ajax.reload();
                        $("#form")[0].reset();
                        $("#IncreasesOrDeductions").val("");
                        $("#myModel").modal("show");

                        $("#Name").focus();

                        if (data.split("&")[0] == "ID=0") {

                            toastr.success('@Messages.IncreasesDeductionTypeSaved', '', { timeOut: 4000 });

                        }
                        else {
                            $("#myModel").modal("hide");
                            toastr.success('@Messages.IncreasesDeductionTypeEdited ', '', { timeOut: 4000 });
                        }
                    }

                }
                else {

                    toastr.error('عمليه غير ناجحه', 'حدث خطأ اثناء الاضافه برجاء المحاوله مره اخري ', { timeOut: 3000 });
                }


            },
            error: function () {

                      if (data.split("&")[0] == "ID=0") {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorAdding ', { timeOut: 3000 });

                    }
                    else {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorModification ', { timeOut: 3000 });
                    }
            }
        });

    }

     function ChangeName() {
         let id = $("#IncreasingDeductionTypeID").val();
        let name = $("#Name").val();
          var url = "/IncreasesDeductionType/CheckName?Name="+name+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                if (rs.msg == false) {
                    $("#NameValdiation").show();
                    $("#NameValdiation").html('@Messages.NameValidationError');
                }
                else
                $("#NameValdiation").hide();
            }
        });
    }
    $(document).ready(function () {

        $('#IncreasesDeductionType').DataTable({
            "ajax": {
                'url': "GetIncreasesDeductionType",
                'type': "GET"
            }, "columns": [
                {
                    "data": null, orderable: false,
                    "render": function (data, type, full, meta) {
                        return meta.row + 1;
                    }
                },
                { "data": "Name" },
                 { "data": "EnName" },
                { "data": "IncreasesOrDeductionsName" }, {
                    "data": "ID", "render": function (data) {
                        return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='EditIncreasesDeductionType(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>"
                    }
                },
                {
                    "data": "ID", "render": function (data) {
                        return "<botton class='btn btn-danger ED' style='margin-top:3px' onclick='DeleteIncreasesDeductionType(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                    }
                },
            ], "language": GetLanguage()
        });
    });
    function GetLanguage() {
        debugger;
                var EN = {
                    "sEmptyTable": "No data available in table",
                    "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "sInfoEmpty": "Showing 0 to 0 of 0 entries",
                    "sInfoFiltered": "(filtered from _MAX_ total entries)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ",",
                    "sLengthMenu": "Show _MENU_ entries",
                    "sLoadingRecords": "Loading...",
                    "sProcessing": "Processing...",
                    "sSearch": "Search:",
                    "sZeroRecords": "No matching records found",
                    "oPaginate": {
                        "sFirst": "First",
                        "sLast": "Last",
                        "sNext": "Next",
                        "sPrevious": "Previous"
                    },
                    "oAria": {
                        "sSortAscending": ": activate to sort column ascending",
                        "sSortDescending": ": activate to sort column descending"
                    }
                };
                var AR =
                {
                    "sEmptyTable": "ليست هناك بيانات متاحة في الجدول",
                    "sLoadingRecords": "جارٍ التحميل...",
                    "sProcessing": "جارٍ التحميل...",
                    "sLengthMenu": "أظهر _MENU_ مدخلات",
                    "sZeroRecords": "لم يعثر على أية سجلات",
                    "sInfo": "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                    "sInfoEmpty": "يعرض 0 إلى 0 من أصل 0 سجل",
                    "sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
                    "sInfoPostFix": "",
                    "sSearch": "ابحث:",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "الأول",
                        "sPrevious": "السابق",
                        "sNext": "التالي",
                        "sLast": "الأخير"
                    }
                };
                let LangFlag = @(System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.IsRightToLeft ?"true":"false");
                return (LangFlag == false ? EN : AR);
            }
    function EditIncreasesDeductionType(EditedID) {
        debugger;
        var url = "/IncreasesDeductionType/getIncreasesDeductionTypeByID?id=" + EditedID;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                $("#modalTitle").html("@Resources.EditIncreasesDeductionType");
                $("#SaveIncreasesDeductionType").html("@Resources.Edit");
                $("#myModel").modal('show');
                 $("span[class*='error']").text("")
                 $("#form")[0].reset();
                $("#IncreasingDeductionTypeID").val(rs.data.ID)
                $("#Name").val(rs.data.Name);
                $("#EnName").val(rs.data.EnName);
                $("#IncreasesOrDeductions").val(rs.data.IncreasesOrDeductions);
            }
        });
    }
    function DeleteIncreasesDeductionType(ID) {
        $("#myModelDelete").modal('show');
        DeleteID = ID;
    }
    $("#DeleteIncreasingDeductionType").click(function () {

        $.ajax({
            type: "post",
            url: "/IncreasesDeductionType/deleteIncreasesDeductionType?id=" + DeleteID,

            success: function (response) {
                $("#myModelDelete").modal("hide");
                $("#IncreasesDeductionType").DataTable().ajax.reload();
                toastr.success('@Messages.IncreasesDeductionTypeDeleted ', '', { timeOut: 4000 })
            },
            error: function () {
                $("#myModelDelete").modal("hide");
                $("#IncreasesDeductionType").DataTable().ajax.reload();
                toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorDeletion ', { timeOut: 3000 });
            }
        });
    });
     function ChangeENName() {
        debugger;
        let id =$("#IncreasingDeductionTypeID").val();
        let name = $("#EnName").val();
          var url = "/IncreasesDeductionType/CheckENName?Name="+name+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                if (rs.msg == false) {
                    $("#EnNameValdiation").show();
                    $("#EnNameValdiation").html('@Messages.NameValidationError');
                }
                else
                $("#EnNameValdiation").hide();
            }
        });
    }
    </script>
    }
