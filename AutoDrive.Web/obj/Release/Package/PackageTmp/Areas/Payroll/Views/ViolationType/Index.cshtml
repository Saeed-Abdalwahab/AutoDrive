@using AutoDriveResources
@model AutoDrive.VM.AutoDrivePayroll.ViolationTypeVM
@using AutoDrive.Static.Enums

@{
    ViewBag.Title = @Resources.ViolationType;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="x_content">
    <h2>@Resources.ViolationType</h2>

    <div class="modal" id="myModel" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" onclick="Cancel()" data-dismiss="modal">&times;</a>
                    <h4 id="modalTitle"></h4>
                </div>
                <div class="modal-body" id="create">
                    <form id="form">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.HiddenFor(m => m.ID, new { @id = "ViolationTypeID" })
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control",@onkeyup = "ChangeName()" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    <span id="NameValdiation" style="color:#a94442;display:none;"></span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EnName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EnName, new { htmlAttributes = new { @class = "form-control", @onkeyup = "ChangeENName()" } })
                                    @Html.ValidationMessageFor(model => model.EnName, "", new { @class = "text-danger" })
                                    <span id="EnNameValdiation" style="color:#a94442;display:none;"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FromMoneyOrMoral, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.FromMoneyOrMoral, Resources.Choose, htmlAttributes: new { @class = "form-control",@onchange="changeFromMoneyOrMoral()" })
                                    @Html.ValidationMessageFor(model => model.FromMoneyOrMoral, Messages.Required, new { @class = "text-danger", @style = "color:#a94442;display:none;", @id = "FromMoneyOrMoralValidation" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FromBaseSalaryOrOverall, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.FromBaseSalaryOrOverall, Resources.Choose, htmlAttributes: new { @class = "form-control", @onchange = "FromBaseSalaryOrOverallChange()" })
                                    @Html.ValidationMessageFor(model => model.FromBaseSalaryOrOverall, Messages.Required, new { @class = "text-danger", @style = "color:#a94442;display:none;", @id = "FromBaseSalaryOrOverallValidation" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DaysNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DaysNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DaysNumber, Messages.Required, new { @class = "text-danger", @style = "color:#a94442;display:none;", @id = "DaysNumberValidation" })
                                </div>
                            </div>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" id="SaveViolationType"></a>
                    <a href="#" class="btn btn-primary" onclick="Cancel()" data-dismiss="modal">@Resources.Cancel</a>
                </div>
            </div>
        </div>
    </div>



    <div class="modal" id="myModelDelete" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>@Resources.DeleteViolationType</h4>
                </div>
                <div class="modal-body text-center" id="Delete">
                    <h2>@Resources.DeleteMessage</h2>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-danger" id="DeleteViolationType">@Resources.Delete</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">@Resources.Cancel</a>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-12" id="con">
        <table id="ViolationTypeTB" class="table table-striped jambo_table bulk_action" >
            <thead>
                <tr>
                    <th>@Resources.SerialNumber</th>
                    <th>@Resources.ArName</th>
                    <th>@Resources.EnName</th>
                    <th>@Resources.FromMoneyOrMoral</th>
                    <th>@Resources.FromBaseSalaryOrOverall</th>
                    <th>@Resources.DaysNumber</th>
                    <th>@Resources.Edit</th>
                    <th>@Resources.Delete</th>
                </tr>
            </thead>
        </table>

        <button type="button" class="btn btn-primary btn-lg btn-round navbar-fixed-bottom " onclick="Create()" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="@Resources.AddViolationType" style="left:74%;bottom:15%"><span class="glyphicon glyphicon-plus"></span></button>
    </div>

</div>
@section scripts{
    <script>
         let DeleteID;
    function Create() {
          $("span[class*='error']").text("")
            $("#form")[0].reset();
            $("#modalTitle").html("@Resources.AddViolationType");
            $("#SaveViolationType").html("@Resources.Add");
            $("#ViolationTypeID").val(0);
        $("#myModel").modal();
        $("#Name").focus();
            }
     $("#Name").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            Save()

        }
        else {
            $(".input-validation-error").focus();
        }
    }
    });
      $("#EnName").keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            Save()
        }
        else {
            $(".input-validation-error").focus();
        }
    }
      });
    $("#DaysNumber").keypress(function (event) {
         $("#DaysNumberValidation").hide();
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
        if (formValidation()) {
            Save()
        }
        else {
            $(".input-validation-error").focus();
        }
    }
    });
    function formValidation() {
        debugger;
        if ((!$("#form").valid())||($("#FromMoneyOrMoral").val()=="0") ||($("#FromMoneyOrMoral").val()==@((int)ViolationType.FromMoney)&&$("#DaysNumber").val()=="")||($("#FromMoneyOrMoral").val()==@((int)ViolationType.FromMoney)&&$("#FromBaseSalaryOrOverall").val()=="0")) {
            if ($("#FromMoneyOrMoral").val()==@((int)ViolationType.FromMoney)&&$("#DaysNumber").val()=="") {
                $("#DaysNumberValidation").show();
            }
             if ($("#FromMoneyOrMoral").val()==@((int)ViolationType.FromMoney)&&$("#FromBaseSalaryOrOverall").val()=="0") {
                $("#FromBaseSalaryOrOverallValidation").show();
            }
            if ($("#FromMoneyOrMoral").val()=="0") {
                $("#FromMoneyOrMoralValidation").show();
            }
            return false;
        }
        return true;
    }
       $("#SaveViolationType").click(function () {
            Save();
       });
     function Save() {

          if (!formValidation()) {
            return true;
        }
            var data = $("#form").serialize();
            $.ajax({
                type: "post",
                url: "/ViolationType/Save",
                data: data,
                success: function (response) {
                    if (response.msg != "Model is null") {
                        if (response.msg == true) {
                            $("#ViolationTypeTB").DataTable().ajax.reload();
                            $("#form")[0].reset();
                            $("#Name").focus();
                            if (data.split("&")[0] == "ID=0") {
                                toastr.success('@Messages.ViolationTypeSaved', '', { timeOut: 4000 });

                            }
                            else {
                                $("#myModel").modal("hide");
                                toastr.success('@Messages.ViolationTypeEdited', '', { timeOut: 4000 });
                            }
                        } 

                    }
                    else {
                      if ($("#FromMoneyOrMoral").val()==@(ViolationType.FromMoney)&&$("#DaysNumber").val()=="") {
                        $("#DaysNumberValidation").show();
                    }
                     if ($("#FromMoneyOrMoral").val()==@(ViolationType.FromMoney)&&$("#FromBaseSalaryOrOverall").val()=="0") {
                        $("#FromBaseSalaryOrOverallValidation").show();
                    }
                     if ($("#FromMoneyOrMoral").val()=="0") {
                $("#FromMoneyOrMoralValidation").show();
            }
                       toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorAdding ', { timeOut: 3000 });
                    }


                },
                error: function () {
                    if (data.split("&")[0] == "ID=0") {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorAdding ', { timeOut: 3000 });

                    }
                    else {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorModification ', { timeOut: 3000 });
                    }

                }
            });

            }
    function FromBaseSalaryOrOverallChange() {
          $("#FromBaseSalaryOrOverallValidation").hide();
            }
    function ChangeName() {
         let id = $("#ViolationTypeID").val();
        let name = $("#Name").val();
          var url = "/ViolationType/CheckName?Name="+name+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                if (rs.msg == false) {
                    $("#NameValdiation").show();
                    $("#NameValdiation").html('@Messages.NameValidationError');
                }
                else
                $("#NameValdiation").hide();
            }
        });
    }

    function ChangeENName() {
        debugger;
        let id = $("#ViolationTypeID").val();
        let name = $("#EnName").val();
          var url = "/ViolationType/CheckENName?Name="+name+"&Id="+id;
        $.ajax({
            type: "GET",
            url: url,
            success: function (rs) {
                if (rs.msg == false) {
                    $("#EnNameValdiation").show();
                    $("#EnNameValdiation").html('@Messages.NameValidationError');
                }
                else
                $("#EnNameValdiation").hide();
            }
        });
    }
     function Cancel() {
        $("#NameValidation").hide();
         $("#ENNameValidation").hide();
         $("#FromMoneyOrMoralValidation").hide();
         $("#FromBaseSalaryOrOverallValidation").hide();
         $("#DaysNumberValidation").hide();
         $("#Name-error").hide();
         $("#EnName-error").hide();
         $("#form")[0].reset();
    }
    function changeFromMoneyOrMoral() {
        $("#FromMoneyOrMoralValidation").hide();
    }
       function GetLanguage() {
       
                var EN = {
                    "sEmptyTable": "No data available in table",
                    "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "sInfoEmpty": "Showing 0 to 0 of 0 entries",
                    "sInfoFiltered": "(filtered from _MAX_ total entries)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ",",
                    "sLengthMenu": "Show _MENU_ entries",
                    "sLoadingRecords": "Loading...",
                    "sProcessing": "Processing...",
                    "sSearch": "Search:",
                    "sZeroRecords": "No matching records found",
                    "oPaginate": {
                        "sFirst": "First",
                        "sLast": "Last",
                        "sNext": "Next",
                        "sPrevious": "Previous"
                    },
                    "oAria": {
                        "sSortAscending": ": activate to sort column ascending",
                        "sSortDescending": ": activate to sort column descending"
                    }
                };
                var AR =
                {
                    "sEmptyTable": "ليست هناك بيانات متاحة في الجدول",
                    "sLoadingRecords": "جارٍ التحميل...",
                    "sProcessing": "جارٍ التحميل...",
                    "sLengthMenu": "أظهر _MENU_ مدخلات",
                    "sZeroRecords": "لم يعثر على أية سجلات",
                    "sInfo": "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                    "sInfoEmpty": "يعرض 0 إلى 0 من أصل 0 سجل",
                    "sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
                    "sInfoPostFix": "",
                    "sSearch": "ابحث:",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "الأول",
                        "sPrevious": "السابق",
                        "sNext": "التالي",
                        "sLast": "الأخير"
                    }
                };
                let LangFlag = @(System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.IsRightToLeft ?"true":"false");
                return (LangFlag == false ? EN : AR);
            }
       $(document).ready(function () {
                $('#ViolationTypeTB').DataTable({
                    "ajax": {
                        'url': "@Url.Action("GetViolationType","ViolationType")",
                        'type': "GET"
                    }, "columns": [
                        {
                            "data": null, orderable: false,
                            "render": function (data, type, full, meta) {
                                return meta.row + 1;
                            },width: "2%"
                        },
                        { "data": "Name",width:"10%" },
                        { "data": "EnName" ,width:"10%"},
                        { "data": "FromMoneyORMoralName" ,width:"10%"},
                        { "data": "BasicSalaryOROverall" ,width:"10%"},
                        { "data": "DaysNum",width:"10%" }, {
                            "data": "ID", "render": function (data, type, row) {
                               
                                    return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='EditViolationType(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>"
                                }
                               
                        },
                        {
                            "data": "ID", "render": function (data, type, row) {
                               
                                    return "<botton class='btn btn-danger ED' style='margin-top:3px' onclick='DeleteViolationType(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                            }
                        }
                    ], "language": GetLanguage()
                });
       });
    function EditViolationType(id) {
        var url = "/ViolationType/getViolationTypeByID?id=" + id;
                $.ajax({
                    type: "GET",
                    url: url,
                    success: function (rs) {
                        console.log(rs.data)
                        $("#modalTitle").html("@Resources.EditViolationType");
                        $("#SaveViolationType").html("@Resources.Edit");
                        $("#myModel").modal('show');
                        $("span[class*='error']").text("")
                        $("#form")[0].reset();
                        $("#ViolationTypeID").val(rs.data.ID)
                        $("#Name").val(rs.data.Name);
                        $("#EnName").val(rs.data.EnName);
                        $("#FromBaseSalaryOrOverall").val(rs.data.FromBaseSalaryOrOverall);
                        $("#FromMoneyOrMoral").val(rs.data.FromMoneyOrMoral);
                        $("#DaysNumber").val(rs.data.DaysNumber);
                    }
                });
            }
     function DeleteViolationType(id) {
                $("#myModelDelete").modal('show');
                DeleteID = id;
            }
    $("#DeleteViolationType").click(function () {
                debugger;
                $.ajax({
                    type: "post",
                    url: "/ViolationType/delete?id=" + DeleteID,

                    success: function (response) {
                        $("#myModelDelete").modal("hide");
                        $("#ViolationTypeTB").DataTable().ajax.reload();
                        toastr.success('@Resources.violationTypeDeleted', '', { timeOut: 4000 })
                    },
                    error: function () {
                        toastr.error('@Messages.NotSuccessfulOperation', '@Messages.ErrorDeletion ', { timeOut: 3000 });
                    }
                });
            });
    </script>
    
    }

