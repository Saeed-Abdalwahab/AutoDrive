@model AutoDrive.VM.AutoDriveHR.EmployeeLicenceDataVM
<form enctype="multipart/form-data" id="LicenceDataForm" action="@Url.Action("Save","EmployeeLicenceData")">

    <div class="form-horizontal">

        <div class="form-group">
            @Html.HiddenFor(x=>x.EmployeeId)
            @Html.HiddenFor(x=>x.ID)
            @Html.LabelFor(x => x.LicenceTypeHRId, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.LicenceTypeHRId, ViewBag.licenceTypeHRs as SelectList, Messages.licenceTypeHRDropDown, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.LicenceTypeHRId, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(x => x.LicenceKindHRId, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.LicenceKindHRId, Enumerable.Empty<SelectListItem>(), Messages.licenceKindHRsDropDown, new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.LicenceKindHRId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(x => x.LicenseNumber, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-5">
                @Html.EditorFor(x => x.LicenseNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.LicenseNumber, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(x => x.SourceAreaId, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.SourceAreaId, ViewBag.areas as SelectList, Messages.areasDropDown, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.SourceAreaId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(x => x.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-5">
                @Html.EditorFor(x => x.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.ReleaseDate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(x => x.EndDate, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-5">
                @Html.EditorFor(x => x.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</form>
<script>
    $(document).ready(function () {
           $("select").chosen({
            width: '100%',
            no_results_text: '@Messages.NoResultFounded',
            search_contains: true,
             });
            $("select").css({ "visibility":"hidden", "position":"absolute","display":""});
         
         $("[data-val-date]").datepicker({
                
            });
        //$("#ReleaseDate").datepicker({
        //    dateFormat: 'dd/MM/yyyy',
        //    minDate: 2
        //});
        //$("#EndDate").datepicker({
        //    dateFormat: 'dd/MM/yyyy',
        //    minDate: 2
        //});
           $("#EndDate").datepicker("option", "minDate", $("#ReleaseDate").val());

    $("[data-val-date]").attr("ReadOnly", "ReadOnly")
    $("#ReleaseDate").change(function () {
        $("#EndDate").val("");
        $("#EndDate").datepicker("option", "minDate", $(this).val());
    });
        if (parseInt($("#LicenceTypeHRId").val()) > 0) {

            $.ajax({
                url: "@Url.Action("FetchLicenceKidHr","LicenceKindHR")",
                data: { LicencTypID: parseInt($("#LicenceTypeHRId").val()) },
                type: "GET",
                success: function (res) {
                    
                    

                    $("#LicenceKindHRId option[value!='']").remove();
                    $.each(res.data, function (i, Value) {
                        var OP = '<option value="' + Value.ID + '">' + Value.Name + '</option>';
                        $("#LicenceKindHRId").append(OP);
                    });
                    $("#LicenceKindHRId").val("@Model.LicenceKindHRId")
                        $("#LicenceKindHRId").removeAttr("disabled");

                    $("#LicenceKindHRId_chosen").attr('disabled', false).trigger("chosen:updated")

            $("#LicenceKindHRId").trigger('chosen:updated');

                }
            })

        }

        $("#LicenceTypeHRId").change(function () {
            debugger
            var LicenceTypHrId = $("#LicenceTypeHRId").val();
            if (LicenceTypHrId == undefined || LicenceTypHrId == "") {
                $("#LicenceKindHRId").attr("disabled", "disabled");
                $("#LicenceKindHRId").val("")
                $("#LicenceKindHRId_chosen").attr('disabled', true).trigger("chosen:updated")
            $("#LicenceKindHRId").trigger('chosen:updated');


            }
            else {
                $.ajax({
                    url: "@Url.Action("FetchLicenceKidHr","LicenceKindHR")",
                    data: { LicencTypID: LicenceTypHrId },
                    type: "GET",
                    success: function (res) {
                        
                        $("#LicenceKindHRId").removeAttr("disabled");

                        $("#LicenceKindHRId option[value!='']").remove();
                        $.each(res.data, function (i, Value) {
                            var OP = '<option value="' + Value.ID + '">' + Value.Name + '</option>';
                            $("#LicenceKindHRId").append(OP);
                        });
                        $("#LicenceKindHRId").attr("disabled", false);

                        $("#LicenceKindHRId_chosen").attr('disabled', false).trigger("chosen:updated")
            $("#LicenceKindHRId").trigger('chosen:updated');
                    }
                })
            }


        });
    });
</script>